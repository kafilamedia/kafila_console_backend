{"version":3,"sources":["logo.svg","constant/Url.js","redux/actionCreators.js","redux/types.js","components/layout/Footer.js","components/BaseComponent.js","components/layout/Header.js","components/messages/Message.js","components/pages/Login.js","components/forms/commons.js","components/buttons/NavButtons.js","components/container/Card.js","components/pages/Dashboard.js","components/pages/BaseAdminPage.js","components/pages/management/ManagementMenu.js","middlewares/Common.js","services/Promises.js","services/MasterDataService.js","components/pages/management/BaseManagementPage.js","components/container/Columns.js","components/pages/management/UsersManagement.js","components/pages/management/DepartementManagement.js","components/pages/management/UsersManagementForm.js","components/pages/management/DepartementManagementForm.js","services/MeetingNoteSerivce.js","components/pages/meetingnotes/MeetingNoteForm.js","utils/DateUtil.js","components/pages/meetingnotes/MeetingNoteActionForm.js","services/UserService.js","components/pages/Profile.js","components/layout/Content.js","components/widget/Loader.js","components/messages/Alert.js","App.js","redux/userReducer.js","redux/managementReducer.js","redux/meetingNotesReducer.js","redux/reducers.js","middlewares/UserMiddleware.js","middlewares/CatalogMiddleware.js","middlewares/MeetingNoteMiddleware.js","redux/configureStore.js","Root.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","devMode","document","getElementById","value","rootValue","contextPath","concat","usedHost","url","apiAccount","apiAccountDashboard","apiNotes","accountAction","app","startLoading","type","payload","meta","email","password","user","meetingNotesAction","request","filter","fieldsFilter","console","debug","limit","page","orderBy","orderType","Footer","react_default","a","createElement","class","href","Component","BaseComponent","props","_this","authenticated","arguments","length","undefined","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","parentApp","validateLoginStatus","loginStatus","loggedUser","backToLogin","getParentApp","showConfirmation","body","Promise","resolve","reject","showAlert","e","showInfo","showError","showAlertError","history","push","withProgress","endLoading","doAjax","method","params","successCallback","errorCallback","assertThisInitialized","then","response","catch","finally","warn","commonAjax","commonAjaxWithProgress","menus","name","link","role","Header","state","showBurger","toggleNavBurger","setState","performLogout","accepted","_this2","className","Link","style","backgroundColor","to","src","width","height","onClick","id","map","linkProperty","Header_AppLink","Fragment","display_name","AppLink","key","withRouter","connect","userState","requestId","applicationProfile","dispatch","actions","Message","show","hide","marginBottom","header","aria-label","Login","child","React","createRef","lastLoginAttempt","Date","handleSubmit","event","preventDefault","form","target","FormData","elements","performLogin","showLoginInfo","loginFailed","current","title","components_messages_Message","ref","marginTop","onSubmit","for","nam","placeholder","required","TableHeadWithFilter","headers","onButtonOrderClick","alias","text","toUpperCase","replaceAll","withFilter","commons_InputFormFilter","fontSize","sort","data","InputFormFilter","ButtonApplyResetFilter","InputField","label","note","SelectField","options","option","LabelField","children","SubmitResetButton","submitValue","submitText","withReset","NavButtons","index","buttonValues","generateButtonValues","totalData","activeIndex","buttonsData","i","element","currentPage","displayed_buttons","buttonCount","Math","ceil","min","max","Card","saveButtonOnClick","editButtonOnClick","deleteButtonOnClick","objectSpread","margin","aria-hidden","withButtonFooter","footerContent","Dashboard","count","getMeetingNotesByPage","getMeetingNotes","readInputForm","initialize","hasFilter","meetingNoteData","inputs","getElementsByClassName","getAttribute","onSubmitClick","populateDefaultInputs","hasOwnProperty","error","buttons_NavButtons","meetingNoteList","result_list","navButtons","createNavButton","textAlign","Card_Card","departement","formComponent","overflow","Dashboard_TableHeadWithFilter","item","indexBegin","date","content","substring","decision","deadline_date","is_closed","meetingNoteState","BaseAdminPage","ManagementMenu","commonAuthorizedHeader","Content-Type","Authorization","getLoginKey","getCookie","setApiToken","token","log","setCookie","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","split","c","charAt","indexOf","commonAjaxPostCalls","endpoint","fetch","JSON","stringify","json","code","MasterManagementService","setUsersData","usersData","storeUser","userModel","viewUser","userList","list","storeDepartement","viewDepartement","deleteRecord","departementList","departementsData","instance","BaseManagementPage","loadRecords","masterDataServce","recordData","successLoaded","errorLoaded","getRecordDataStored","loadRecordByPage","set","prototype","delete","onSuccessDelete","onErrorDelete","linkToFormCreate","linkToFormEdit","buttonsModifyAndDelete","editLink","buttonDeleteRecord","Columns","cells","cell","UsersManahement","masterDataService","showForm","recordList","Columns_Columns","UsersManagement_TableHeadWithFilter","DeparementManagement","tableLayout","DepartementManagement_TableHeadWithFilter","description","UserManagementForm","recordNotFound","isLoadingRecord","storeRecord","fieldName","getRecordId","store","match","departementListLoaded","loadRecord","recordSaved","recordFailedToSave","loadDepartements","handleSuccessGetRecord","departement_id","handleErrorGetRecord","formTitle","commons_InputField","commons_SelectField","dep","commons_SubmitResetButton","DepartementManagementForm","MeetingNoteSerivce","meetingNote","meeting_note","view","storeAction","action","FORM_ID","MeetingNoteForm","meetingNoteService","fillDataAndStore","storeMeetingNote","handleSuccessSubmit","reset","handleErrorSubmit","isClosed","setAttribute","enableInputs","removeAttribute","MeetingNoteForm_InputField","MONTHS","dateStringDayMonthYearFromText","raw","day","month","year","MeetingNoteActionForm","showDetailNote","hideDetailNote","note_id","commons_LabelField","place","person_in_charge","MeetingNoteActionForm_InputField","UserService","updateProfile","Profile","userService","populateForm","onSubmitSuccess","onSubmitError","requestAppId","Content","Switch","Route","exact","path","render","Content_Home","pages_Dashboard","meetingnotes_MeetingNoteForm","meetingnotes_MeetingNoteActionForm","management_ManagementMenu","UsersManagement","UsersManagementForm","DepartementManagement","management_DepartementManagementForm","pages_Login","pages_Profile","Home","Loader","opacity","color","position","zIndex","Backdrop","Alert","onYes","onNo","onClose","focus","headerClassName","yesOnly","isError","App","menuCode","loading","loadingPercentage","mainAppUpdated","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","loadings","setMenuCode","refresh","incrementLoadings","decrementLoadings","realtime","yesCallback","noCallback","dismissAlert","routedContent","refreshLogin","additionalMenus","Array","menu","isNotAuthenticated","isShoppingDisabled","enableShopping","messages_Alert","layout_Header","minHeight","Loader_Loader","layout_Content","layout_Footer","initState","loginKey","loginAttempt","reducer","result","api_token","entitiesData","entityConfig","managedEntity","entityProperty","managementMenus","entities","generalList","rootReducer","combineReducers","userReducer","managementState","managementReducer","meetingNotesReducer","initialState","performLoginMiddleware","next","common","all","_ref","_ref2","slicedToArray","responseJson","newAction","assign","err","param","requestAppIdMiddleware","_ref3","_ref4","message","refreshLoginStatusMiddleware","performLogoutMiddleware","_ref5","_ref6","logoutSuccess","alert","removeEntityMiddleware","updateCartMiddleware","getMeetingNotesMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","meetingNoteMiddleware","Root","es","HashRouter","src_App","Boolean","window","location","hostname","ReactDOM","src_Root","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3bcd9fac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8000\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    \r\n    return contextPath;\r\n}\r\n \r\nexport const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\";\r\nexport const baseResUrl = contextPath()+\"res/img/\";\r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiEntityBaseUrl = usedHost + \"api/entity/\"\r\nconst apiAccount = usedHost + \"api/account/\"\r\nconst apiAccountDashboard = usedHost + \"api/accountdashboard/\"\r\nconst apiAdmin = usedHost + \"api/admin/\"\r\nconst apiNotes = usedHost + \"api/notes/\"\r\n \r\nexport const updateCart = (cart, app) => {\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, app: app }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n} \r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const refreshLoginStatus = () => {\r\n\r\n    let loginRequest = {\r\n        type: types.REFRESH_LOGIN,\r\n        payload: {},\r\n        meta: { type: types.REFRESH_LOGIN }\r\n    };\r\n    return loginRequest;\r\n} \r\n  \r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\nexport const accountAction = {\r\n\r\n    requestAppId : (app) => {\r\n        app.startLoading();\r\n        return {\r\n            type: types.REQUEST_ID,\r\n            payload: {},\r\n            meta: {\r\n                app: app, type: types.REQUEST_ID,\r\n                url: apiAccountDashboard.concat(\"user\")\r\n            }\r\n        };\r\n    },\r\n    performLogout : (app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGOUT,\r\n            payload: {},\r\n            meta: { app: app, type: types.DO_LOGOUT, url: apiAccountDashboard.concat(\"logout\") }\r\n        };\r\n        return loginRequest;\r\n    },\r\n    performLogin : (email, password, app) => {\r\n        app.startLoading();\r\n        let loginRequest = {\r\n            type: types.DO_LOGIN,\r\n            payload: {\r\n                user: { email: email, password: password }\r\n            },\r\n            meta: { type: types.DO_LOGIN, url: apiAccount.concat(\"login\"), app: app }\r\n        };\r\n        return loginRequest;\r\n    }\r\n}\r\n\r\nexport const meetingNotesAction = {\r\n    store: (meetingNote, app) => {\r\n        app.startLoading();\r\n        let requested = {\r\n            type: types.STORE_MEETING_NOTES,\r\n            payload: {\r\n                meeting_note:meetingNote    \r\n            },\r\n            meta: {\r\n                type: types.STORE_MEETING_NOTES,\r\n                url: apiNotes.concat(\"store\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    },\r\n    list : (request, app) => {\r\n        app.startLoading();\r\n        \r\n        const filter =  request.fieldsFilter;\r\n        console.debug(\"request.fieldsFilter: \", filter);\r\n        let requested = {\r\n            type: types.GET_MEETING_NOTES,\r\n            payload: {\r\n                filter: {\r\n                    limit: request.limit,\r\n                    page: request.page,\r\n                    fieldsFilter: filter,\r\n                    orderBy: request.orderBy,\r\n                    orderType: request.orderType,\r\n                },\r\n            },\r\n            meta: {\r\n                type: types.GET_MEETING_NOTES,\r\n                url: apiNotes.concat(\"list\"),\r\n                app: app,\r\n            }\r\n        };\r\n        return requested;\r\n    }\r\n\r\n}\r\n \r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\n\r\n//meeting notes\r\nexport const GET_MEETING_NOTES = \"GET_MEETING_NOTES\";\r\nexport const STORE_MEETING_NOTES = \"GET_MEETING_NOTES\";","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <footer class=\"footer has-background-dark\">\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<div class=\"content has-text-centered\">\r\n\t\t\t\t\t<div class=\"columns is-mobile is-centered\">\r\n\t\t\t\t\t\t<div class=\"field is-grouped is-grouped-multiline\">\r\n\t\t\t\t\t\t\t<div class=\"control\">\r\n\t\t\t\t\t\t\t\t<div class=\"tags has-addons\">\r\n\t\t\t\t\t\t\t\t\t<a class=\"tag is-link\" href=\"https://kafila.sch.id\">Kafila International Islamic School</a>\r\n\t\t\t\t\t\t\t\t\t<span class=\"tag is-light\">&copy; Kafila Console 2020</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import { React , Component} from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nexport default class BaseComponent extends Component {\r\n    constructor(props, authenticated = true){\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated =  authenticated;\r\n    \r\n        this.validateLoginStatus = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            if (this.props.loginStatus != true || this.props.loggedUser == null) {\r\n                this.backToLogin();\r\n            }\r\n        }\r\n        this.getParentApp = () => {\r\n            return this.props.app;\r\n        }\r\n        this.showConfirmation = (body) => {\r\n            return new Promise((resolve, reject) =>{\r\n                const onYes = function(e) {\r\n                    resolve(true);\r\n                }\r\n                const onNo = function(e) {\r\n                    resolve(false);\r\n                }\r\n                this.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n            });\r\n            \r\n        }\r\n        this.showInfo = (body) => {\r\n            this.parentApp.showAlert(\"Info\", body, true, function(){});\r\n        }\r\n        this.showError = (body) => {\r\n            this.parentApp.showAlertError(\"Error\", body, true, function(){});\r\n        }\r\n\r\n        this.backToLogin = () => {\r\n            if (!authenticated) {\r\n                return;\r\n            }\r\n            this.props.history.push(\"/login\");\r\n        }\r\n        /**\r\n         * \r\n         * @param {boolean} withProgress \r\n         */\r\n        this.startLoading = (withProgress) => {\r\n            this.parentApp.startLoading(withProgress);\r\n        }\r\n\r\n        this.endLoading = () => {\r\n            this.parentApp.endLoading();\r\n        }\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {boolean} withProgress \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.doAjax = (method, params, withProgress, successCallback, errorCallback) => {\r\n            if(!method) {console.warn(\"Method Not Found! \");return}\r\n            this.startLoading(withProgress);\r\n            const app = this;\r\n\r\n            method(params).then(function(response){\r\n                if(successCallback){ \r\n                    successCallback(response);\r\n                }\r\n            }).catch(function(e){\r\n                if(errorCallback){\r\n                    errorCallback(e);\r\n                } else {\r\n                    if (typeof(e) == 'string'){\r\n                        app.showInfo(\"Operation Failed: \"+e);\r\n                    }\r\n                    app.showInfo(\"resource not found\");\r\n                }\r\n            }).finally((e)=>{\r\n                this.endLoading();\r\n            })\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjax = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, false, successCallback, errorCallback);\r\n        }\r\n         /**\r\n         * \r\n         * @param {Function} method \r\n         * @param {any} params \r\n         * @param {Function} successCallback \r\n         * @param {Function} errorCallback \r\n         */\r\n        this.commonAjaxWithProgress = (method, params, successCallback, errorCallback) => {\r\n            this.doAjax(method, params, true, successCallback, errorCallback);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (null == this.props.loggedUser) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\n\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from './../BaseComponent';\r\nconst menus = [\r\n    {\r\n        name:'Home',\r\n        link:'/home'\r\n    }, {\r\n        name:'Dashboard',\r\n        link:'/dashboard',\r\n        authenticated: true,\r\n    }, {\r\n        name:'Tambah Notulensi',\r\n        link:'/meetingnote/create',\r\n        authenticated: true,\r\n    }, {\r\n        name:'Management',\r\n        link:'/management',\r\n        authenticated: true,\r\n        role:'admin'\r\n    }\r\n]\r\n\r\nclass Header extends BaseComponent{\r\n    constructor(props){\r\n        super(props, false);\r\n        this.state = {\r\n            showBurger:false\r\n        }\r\n\r\n        this.toggleNavBurger = () => {\r\n            this.setState({showBurger:!this.state.showBurger})\r\n        }\r\n\r\n        this.performLogout = () => {\r\n            const props = this.props;\r\n            this.showConfirmation(\"Apakah Anda ingin keluar?\").then(function(accepted){\r\n                if (accepted) {\r\n                    props.performLogout(props.app);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    render(){\r\n\r\n        return (\r\n            <nav className=\"navbar is-dark topNav\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"navbar-brand\">\r\n\t\t\t\t\t<Link style={{backgroundColor:'#fff'}} className=\"navbar-item\" to=\"/\">\r\n\t\t\t\t\t\t<img src=\"kiis-stroke.png\" width=\"38\" height=\"38\"/>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<div onClick={this.toggleNavBurger} className=\"navbar-burger burger\">\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t\t<span></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"topNav\" className={this.state.showBurger? \"is-active navbar-menu\":\" navbar-menu\"}>\r\n\t\t\t\t\t<div className=\"navbar-start\">\r\n                        {\r\n                            menus.map(linkProperty=>{\r\n                                return <AppLink loginStatus={this.props.loginStatus} loggedUser={this.props.loggedUser} linkProperty={linkProperty} />\r\n                            })\r\n                        }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"navbar-end\">\r\n\t\t\t\t\t\t<div className=\"navbar-item\">\r\n\t\t\t\t\t\t\t<div className=\"buttons has-addons\">\r\n\t\t\t\t\t\t\t\t \r\n                                    {this.props.loginStatus? \r\n                                    <><Link className=\"button is-info\" to=\"/profile\">\r\n                                        <span className=\"icon\">\r\n                                            <i className=\"fas fa-user\"></i>\r\n                                        </span>\r\n                                        <span>{this.props.loggedUser.display_name} - {this.props.loggedUser.role}</span>\r\n                                    </Link>\r\n                                    <a onClick={this.performLogout} className=\"button is-danger\">\r\n                                        <span className=\"icon\">\r\n                                            <i className=\"fas fa-sign-out-alt\"></i>\r\n                                        </span>\r\n                                        <span>Logout</span>\r\n                                    </a>\r\n                                    </>:\r\n                                    <Link className=\"button is-info\" to=\"/login\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon\">\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-user\"></i>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t<span>Login</span>\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n                                    }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst AppLink = (props) => {\r\n    const linkProperty = props.linkProperty;\r\n    const loginStatus = props.loginStatus;\r\n    const loggedUser = props.loggedUser\r\n    if (!loginStatus && linkProperty.authenticated) {\r\n        return null;\r\n    }\r\n    if(linkProperty.role != null && loggedUser != null && loggedUser.role != linkProperty.role ) {\r\n        return null;\r\n    }\r\n    return (\r\n        <Link key={linkProperty.name + \"LINK\"} className=\"navbar-item\"\r\n            to={linkProperty.link} >{linkProperty.name}</Link>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n      //user\r\n      loginStatus: state.userState.loginStatus,\r\n      loggedUser: state.userState.loggedUser,\r\n      menus: state.userState.menus,\r\n      requestId: state.userState.requestId,\r\n      applicationProfile: state.userState.applicationProfile,\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\r\n  })\r\n  \r\n  export default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Header))\r\n  ","\r\nimport React, { Component } from 'react';\r\nimport './Message.css'\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            show:true\r\n        }\r\n\r\n        this.hide = ()=> {\r\n            this.setState({show:false});\r\n        }\r\n        this.show = ()=> {\r\n            this.setState({show:true});\r\n        }\r\n    }\r\n    render() {\r\n        if (this.state.show == false) {\r\n            return null;\r\n        }\r\n        const className = this.props.className?'message '+this.props.className:'message is-info';\r\n        return (\r\n            <article style={{marginBottom:'10px'}} id=\"my-message\" className={className}>\r\n                <div className=\"message-header\">\r\n                    <p>{this.props.header?this.props.header:\"Info\"}</p>\r\n                    <button onClick={this.hide} className=\"delete\" aria-label=\"delete\"></button>\r\n                </div>\r\n                <div className=\"message-body\">\r\n                    {this.props.body}\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","\r\nimport React, { Component } from 'react';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport Message from './../messages/Message';\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.child = React.createRef();\r\n        this.lastLoginAttempt = new Date();\r\n        this.state = {\r\n\r\n        };\r\n        this.validateLoginStatus = () => {\r\n            if (this.props.loginStatus == true) this.props.history.push(\"/dashboard\");\r\n        }\r\n        this.handleSubmit = (event) => {\r\n            event.preventDefault();\r\n            const form = event.target;\r\n            const data = new FormData(event.target);\r\n            var email = form.elements[0];\r\n            var password = form.elements[1];\r\n\r\n            this.props.performLogin(email.value, password.value, this.props.app);\r\n        }\r\n\r\n        this.showLoginInfo = ()=> {\r\n            if (this.props.loginFailed) {\r\n                if (this.lastLoginAttempt != this.props.lastLoginAttempt) {\r\n                    this.child.current.show();\r\n                    this.lastLoginAttempt = this.props.lastLoginAttempt;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.showLoginInfo();\r\n    }\r\n    componentDidMount() {\r\n\r\n        document.title = \"Login\";\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.loginFailed ? \r\n                    <Message ref={this.child}  className=\"is-danger\" body=\"Login Failed\" /> : null}\r\n\r\n                <div class=\"columns is-centered\">\r\n\r\n                    <div style={{ marginTop: '10px', marginBottom: '10px' }} class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\r\n                        <form id=\"formLogin\" onSubmit={this.handleSubmit} className=\"box\">\r\n                            <div className=\"field\">\r\n                                <label for=\"\" className=\"label\">Email</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input nam=\"email\" type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-envelope\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <label for=\"\" className=\"label\">Password</label>\r\n                                <div className=\"control has-icons-left\">\r\n                                    <input name=\"password\" type=\"password\" placeholder=\"*******\" className=\"input\" required />\r\n                                    <span className=\"icon is-small is-left\">\r\n                                        <i className=\"fa fa-lock\"></i>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"field\">\r\n                                <button className=\"button is-success\">Login</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //console.log(state);\r\n    return {\r\n\r\n        //user\r\n        loginStatus: state.userState.loginStatus,\r\n        lastLoginAttempt: state.userState.lastLoginAttempt,\r\n        loginFailed: state.userState.loginFailed,\r\n        requestId: state.userState.requestId\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    performLogin: (email, password, app) => dispatch(actions.accountAction.performLogin(email, password, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login));","\r\nimport React, { Component } from 'react';\r\nimport './FormControls.css'\r\n\r\nexport const TableHeadWithFilter = (props) => {\r\n    const headers = props.headers;\r\n    const onButtonOrderClick = props.onButtonOrderClick;\r\n    return (<thead>\r\n        <tr>\r\n            {headers.map(header => {\r\n                return <th>{header.alias == null ? header.text.toUpperCase().replaceAll(\"_\", \" \") : header.alias}\r\n\r\n                    {header.withFilter ?\r\n                       <div class=\"field has-addons\">\r\n                       <div class=\"control\">\r\n                                <InputFormFilter type=\"text\" name={header.text} />\r\n                            </div>\r\n                            <div class=\"control\" style={{fontSize:'0.7em', backgroundColor:'#ccc'}}>\r\n                                <i sort=\"asc\" onClick={onButtonOrderClick} data={header.text} className=\"fas fa-angle-up sort-button\"></i>\r\n                                <i sort=\"desc\" onClick={onButtonOrderClick}  data={header.text}  className=\"fas fa-angle-down sort-button\"></i>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        : null}\r\n                </th>\r\n            })}\r\n        </tr>\r\n    </thead>)\r\n}\r\n//not exported\r\nconst InputFormFilter = (props) => {\r\n    const className = \"input form-filter\";\r\n    const type = props.type ? props.type : 'text';\r\n\r\n    return <input className={className} type={type} name={props.name}\r\n        id={'input-form-' + props.name} />\r\n}\r\n\r\nexport const ButtonApplyResetFilter = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"buttons has-addons\">\r\n            <button type=\"submit\" className=\"button is-info\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n                <span>Apply Filter</span>\r\n            </button>\r\n            <button type=\"reset\" className=\"button is-danger\">\r\n                <span className=\"icon\">\r\n                    <i className=\"fas fa-sync\"></i>\r\n                </span>\r\n                <span>Reset Filter</span>\r\n            </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const InputField = (props) => {\r\n\r\n    const className = \"input input-form-field\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\">\r\n                <label className=\"label\">{props.label ? props.label : \"Input\"}</label>\r\n                  \r\n            </div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            props.type == 'textarea' ?\r\n                                <textarea required className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input required type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                            :\r\n                            props.type == 'textarea' ?\r\n                                <textarea className={className + \" textarea\"} id={'input-form-field-' + props.name} name={props.name}></textarea>\r\n                                :\r\n                                <input type={props.type ? props.type : 'text'} id={'input-form-field-' + props.name} name={props.name} className={className} />\r\n                        }\r\n                        {props.note? \r\n                            <p><i>Note: {props.note}</i></p>\r\n                            :null\r\n                        }  \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SelectField = (props) => {\r\n    const optionValues = props.options == null ? [] : props.options;\r\n    const options = optionValues.map((option) => {\r\n        return <option value={option.value} >{option.text}</option>\r\n    })\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Select\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                        {props.required == true ?\r\n                            <select required id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                            :\r\n                            <select id={'input-form-field-' + props.name} name={props.name}\r\n                                className=\"input input-form-field\">\r\n                                {options}\r\n                            </select>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const LabelField = (props) => {\r\n\r\n    const className = \"input\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\"><label className=\"label\">{props.label ? props.label : \"Label\"}</label></div>\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <div className=\"control\">\r\n                    {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const SubmitResetButton = (props) => {\r\n    const submitValue = props.submitText ? props.submitText : \"Submit\";\r\n    return (\r\n        <div className=\"field is-horizontal\">\r\n            <div className=\"field-label is-normal\" />\r\n            <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                    <button className=\"button is-link\" type=\"submit\" >\r\n                        <span className=\"icon\"><i className=\"fas fa-save\"></i></span>\r\n                        <span>{submitValue}</span>\r\n                    </button>\r\n                    {props.withReset == true ?\r\n                        <button className=\"button is-danger\" type=\"reset\" >\r\n                            <span className=\"icon\">\r\n                                <i className=\"fas fa-sync\"></i>\r\n                            </span>\r\n                            <span>Reset</span>\r\n                        </button> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\n \r\nclass NavButtons extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onClick = (index) => {\r\n            if(this.props.onClick) {\r\n                this.props.onClick(index);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const buttonValues = generateButtonValues(this.props.limit, this.props.totalData, this.props.activeIndex);\r\n        const buttonsData = [];\r\n        for (let i = 0; i < buttonValues.length; i++) {\r\n            const element = buttonValues[i];\r\n            buttonsData.push({\r\n                index: element,\r\n            })\r\n        }\r\n\r\n        return (\r\n            <div className=\"buttons\" style={{marginTop:'5px', marginBottom: '5px'}}>\r\n                {buttonsData.map(data=>{\r\n                    const className = data.index == this.props.activeIndex ? \"button is-link\" : \"button is-light\";\r\n                    return (\r\n                        <a onClick={()=>{this.onClick(data.index)}} className={className}>{data.index}</a>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst generateButtonValues = (limit, totalData, currentPage) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n    const min = currentPage - 2;\r\n    const max = currentPage + 2;\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n\r\n    return displayed_buttons;\r\n}\r\n\r\nexport default NavButtons;","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveButtonOnClick = (e) => {\r\n            if (this.props.saveButtonOnClick) {\r\n                this.props.saveButtonOnClick(e);\r\n            }\r\n        }\r\n        this.editButtonOnClick = (e) => {\r\n            if (this.props.editButtonOnClick) {\r\n                this.props.editButtonOnClick(e);\r\n            }\r\n        }\r\n        this.deleteButtonOnClick = (e) => {\r\n            if (this.props.deleteButtonOnClick) {\r\n                this.props.deleteButtonOnClick(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"card\" style={{ margin: '10px', ...this.props.style}}>\r\n                <header class=\"card-header\">\r\n                    <p class=\"card-header-title\">\r\n                        {this.props.title ? this.props.title : \"Card Title\"}\r\n                    </p>\r\n                    <a class=\"card-header-icon\" aria-label=\"more options\">\r\n                        <span class=\"icon\">\r\n                            <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n                        </span>\r\n                    </a>\r\n                </header>\r\n                <div class=\"card-content\">\r\n                    <div class=\"content\">\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                {this.props.withButtonFooter ?\r\n                    <footer class=\"card-footer\">\r\n                        <a href=\"#\" onClick={this.saveButtonOnClick} class=\"card-footer-item\">Save</a>\r\n                        <a href=\"#\" onClick={this.editButtonOnClick} class=\"card-footer-item\">Edit</a>\r\n                        <a href=\"#\" onClick={this.deleteButtonOnClick} class=\"card-footer-item\">Delete</a>\r\n                    </footer>\r\n                    : null\r\n                }\r\n                {this.props.footerContent ?\r\n                    <footer class=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </footer>\r\n                    :\r\n                    null}\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { connect } from 'react-redux'\r\nimport * as formComponent from '../forms/commons';\r\nimport NavButtons from './../buttons/NavButtons';\r\nimport BaseComponent from './../BaseComponent';\r\nimport Card from '../container/Card';\r\nclass Dashboard extends BaseComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n\r\n        this.getMeetingNotesByPage = (page) => {\r\n            this.page = page;\r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.getMeetingNotes = () => {\r\n            this.readInputForm();\r\n\r\n            const request = {\r\n                page: this.page,\r\n                limit: this.limit,\r\n                orderBy: this.orderBy,\r\n                orderType: this.orderType,\r\n                fieldsFilter: this.fieldsFilter\r\n            };\r\n\r\n            this.props.getMeetingNotes(request, this.props.app);\r\n        }\r\n\r\n        this.initialize = () => {\r\n            const hasFilter = this.props.meetingNoteData != null && this.props.meetingNoteData.filter != null;\r\n            const filter = hasFilter ? this.props.meetingNoteData.filter : null;\r\n            this.page = hasFilter ? filter.page : 1;\r\n            this.limit = hasFilter ? filter.limit : 5;\r\n            this.count = hasFilter ? filter.count : 0;\r\n            this.orderBy = hasFilter ? filter.orderBy : null;\r\n            this.orderType = hasFilter ? filter.orderType : null;\r\n        }\r\n\r\n        this.readInputForm = () => {\r\n            const form = document.getElementById('list-form');\r\n            if (form == null) return;\r\n            const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n            this.fieldsFilter = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    this.fieldsFilter[element.name] = element.value;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filter = (form) => {\r\n\r\n            this.page = 1;\r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            console.debug(e.target, \"by \", this.orderBy, this.orderType);\r\n            e.preventDefault();\r\n            \r\n            this.getMeetingNotes();\r\n        }\r\n\r\n        this.onSubmitClick = (e) => {\r\n            e.preventDefault();\r\n            this.filter(document.getElementById(\"list-form\"));\r\n        }\r\n\r\n        this.populateDefaultInputs = () => {\r\n            if (null == this.props.meetingNoteData || null == this.props.meetingNoteData.filter) {\r\n                return;\r\n            }\r\n            const fieldsFilter = this.props.meetingNoteData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillMount() {\r\n\r\n        this.validateLoginStatus();\r\n        this.initialize();\r\n    }\r\n    componentDidMount() {\r\n        if (null == this.props.meetingNoteData) {\r\n            this.getMeetingNotes();\r\n        }\r\n        document.title = \"Dashboard\";\r\n        this.populateDefaultInputs();\r\n    }\r\n\r\n    createNavButton() {\r\n\r\n        if (null == this.props.meetingNoteData) {\r\n\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.getMeetingNotesByPage} limit={this.limit}\r\n            totalData={this.props.meetingNoteData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        if (null == this.props.loggedUser) {\r\n            return null;\r\n        }\r\n\r\n        const meetingNoteData = this.props.meetingNoteData;\r\n        const meetingNoteList = meetingNoteData && meetingNoteData.result_list ? meetingNoteData.result_list : [];\r\n        const navButtons = this.createNavButton();\r\n\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Dashboard</h2>\r\n                <Card title={this.props.loggedUser.display_name} >\r\n                    <p>Bidang {this.props.loggedUser.departement.name}</p>\r\n                </Card>\r\n\r\n                <Card title=\"Daftar Notulen Rapat\">\r\n\r\n                    {/* record list */}\r\n                    {navButtons}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        {formComponent.ButtonApplyResetFilter()}\r\n                        <div style={{overflow:'scroll'}}>\r\n                        <table style={{   }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', alias:\"Id\", withFilter: true },\r\n                                    { text: 'date', alias:\"Tanggal\", withFilter: true },\r\n                                    { text: 'content', alias:\"Pembahasan\", withFilter: true },\r\n                                    { text: 'decision', alias:\"Keputusan\", withFilter: true },\r\n                                    { text: 'deadline_date', alias:\"Deadline\", withFilter: true },\r\n                                    { text: 'departement', alias:\"Bidang\", withFilter: true },\r\n                                    { text: 'user', alias:\"Notulis\", withFilter: true },\r\n                                    { text: 'status', },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                            {meetingNoteList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.date}</td>\r\n                                    <td>{item.content && item.content.length > 10 ? item.content.substring(0, 10) + '...' : item.content}</td>\r\n                                    <td>{item.decision && item.decision.length > 10 ? item.decision.substring(0, 10) + '...' : item.decision}</td>\r\n                                    <td>{item.deadline_date}</td>\r\n                                    <td>{item.departement.name}</td>\r\n                                    <td>{item.user.name}</td>\r\n                                    <td>\r\n                                        {item.is_closed == true? \r\n                                        <span className=\"tag is-info\">Closed</span>\r\n                                        :\r\n                                        <span className=\"tag is-success\">Not Closed</span>}\r\n                                    </td>\r\n                                    <td>\r\n                                        \r\n                                        <Link to={\"/meetingnote/\" + item.id} className=\"button is-small\" >\r\n                                            <i className=\"fas fa-edit\"></i>\r\n                                        </Link>\r\n                                        <Link to={\"/meetingnote/\" + item.id+\"/action\"} className=\"button is-primary is-small\" >\r\n                                            <i className=\"fas fa-location-arrow\"></i>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                        </table>\r\n                        </div>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        meetingNoteData: state.meetingNoteState.meetingNoteData\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Dashboard));","\r\nimport BaseComponent from '../BaseComponent';\r\nexport default class BaseAdminPage extends BaseComponent\r\n{\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.loginStatus == false ||\r\n            this.props.loggedUser == null ||\r\n            this.props.loggedUser.role != 'admin'\r\n            ) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport BaseAdminPage from './../BaseAdminPage';\r\n\r\n\r\nclass ManagementMenu extends BaseAdminPage {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Management\"\r\n    }\r\n    render() {\r\n        const columnClass = \"column is-one-third\";\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Master Data Menu</h2>\r\n                <Card title=\"Menu\">\r\n                        <div  className=\"columns\">\r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                    <p><i style={{fontSize:'50px'}} className=\"fas fa-puzzle-piece\"></i></p>\r\n                                    <Link to=\"/management/departements\">Departements</Link>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className={columnClass}>\r\n                                <div className=\"box has-text-centered\">\r\n                                <p><i style={{fontSize:'50px'}} className=\"fas fa-users\"></i></p>\r\n                                    <Link to=\"/management/users\">Users</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                  \r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(ManagementMenu);","\r\n\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer '+ getLoginKey()\r\n    }\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('kafila_api_token');\r\n}\r\nexport const setApiToken = (token) => {\r\n    console.log(\"setApiToken: \", token);\r\n    return setCookie('kafila_api_token', token);\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\nexport const rejectedPromise = (message) => {\r\n    return new Promise((res,rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise =  (defaultResponse) => new Promise(function(res, rej){\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint, payload = null) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise(function (resolve, reject) {\r\n        fetch(endpoint, {\r\n            method: 'POST',\r\n            body: JSON.stringify(request),\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n        .then(response => response.json())\r\n        .then(function (response) {\r\n            if (response.code == \"00\") \r\n            { resolve(response); }\r\n            else \r\n            { reject(response); }\r\n        })\r\n        .catch((e) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MasterManagementService\r\n{\r\n    static instance = MasterManagementService.instance || new MasterManagementService();\r\n    constructor(){\r\n        this.usersData = null;\r\n        this.departementsData = null;\r\n    }\r\n\r\n    static getInstance()\r\n    {\r\n        if(MasterManagementService.instance == null) {\r\n            MasterManagementService.instance = new MasterManagementService();\r\n        }\r\n        return MasterManagementService.instance;\r\n    }\r\n    setUsersData = (usersData) => {\r\n        this.usersData = usersData;\r\n    }\r\n\r\n    storeUser = (user) => {\r\n        const request = {\r\n            code: 'user',\r\n            userModel:user\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewUser = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"user\"});\r\n    }\r\n\r\n    userList = (filter) => {\r\n        return this.list({\r\n            code: 'user',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    storeDepartement = (departement) => {\r\n        const request = {\r\n            code: 'departement',\r\n            departement:departement\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    viewDepartement = (id) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, {code:\"departement\"});\r\n    }\r\n    deleteRecord = (payload) => {\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/delete/\"+payload.id);\r\n        return commonAjaxPostCalls(endpoint, {code: payload.code});\r\n    }\r\n\r\n    departementList = (filter) => {\r\n        return this.list({\r\n            code: 'departement',\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    list = (payload) => {\r\n        const request = {\r\n            code: payload.code,\r\n            filter: payload.filter\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/masterdata/list\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import React from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Link } from 'react-router-dom';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\n\r\nexport default class BaseManagementPage extends BaseAdminPage {\r\n    constructor(props, name, code) {\r\n        super(props);\r\n        this.masterDataServce = MasterManagementService.instance;\r\n        this.code = code;\r\n        this.name = name;\r\n        this.page = 1;\r\n        this.limit = 5;\r\n        this.count = 0;\r\n        this.orderBy = 'id';\r\n        this.orderType = 'asc';\r\n        this.fieldsFilter = {};\r\n        this.recordData = null;\r\n\r\n        this.successLoaded = (response) => {\r\n            this.recordData = response;\r\n        }\r\n\r\n        this.errorLoaded = (e) => {\r\n\r\n        }\r\n\r\n        this.getRecordDataStored = () => {\r\n            return null;\r\n        }\r\n        this.loadRecordByPage = (page) => {\r\n            super.page = page;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.onButtonOrderClick = (e) => {\r\n            e.preventDefault();\r\n            this.orderBy = e.target.getAttribute(\"data\")\r\n            this.orderType = e.target.getAttribute(\"sort\");\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.filter = (e) => {\r\n            this.page = 1;\r\n            this.loadRecords();\r\n        }\r\n\r\n        this.delete = (id) => {\r\n            const app = this;\r\n            this.showConfirmation(\"Delete \"+this.name+\"?\")\r\n            .then(function(accepted) {\r\n                if(accepted) {\r\n                    app.deleteRecord(id);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.onSuccessDelete = (response) => {\r\n            this.showConfirmation(\"Record has been deleted\").then(this.loadRecords);\r\n        }\r\n\r\n        this.onErrorDelete = (e) => {\r\n            this.showError(\"Error Delete Record\");\r\n        }\r\n\r\n        this.deleteRecord = (id) => {\r\n            this.commonAjax(\r\n                this.masterDataServce.deleteRecord,\r\n                {code: this.code, id: id},\r\n                this.onSuccessDelete,\r\n                this.onErrorDelete\r\n            )\r\n        }\r\n\r\n        this.linkToFormCreate = (link, label) => {\r\n            return (\r\n                <Link to={link} className=\"button is-primary\" style={{marginBottom:'10px'}}>\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </span>\r\n                        <span>{label}</span>\r\n                    </Link>\r\n            )\r\n        }\r\n        this.linkToFormEdit = (link) => {\r\n            return (\r\n                <Link to={link} className=\"button is-warning is-small\">\r\n                        <span className=\"icon\">\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </span>\r\n                        <span>Edit</span>\r\n                    </Link>\r\n            )\r\n        }\r\n\r\n        this.buttonsModifyAndDelete = (editLink, id) => {\r\n            return (\r\n                <div className=\"buttons has-addons\">\r\n                    {this.linkToFormEdit(editLink)}\r\n                    {this.buttonDeleteRecord(id)}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        this.buttonDeleteRecord = (id) => {\r\n            return (\r\n                <a onClick={()=>this.delete(id)} className=\"button is-danger is-small\">\r\n                    <span className=\"icon\">\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </span>\r\n                    <span>Delete</span>\r\n                </a>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = this.name + \" Management\";\r\n        this.loadRecords();\r\n    }\r\n\r\n    loadRecords = () => {\r\n\r\n    }\r\n\r\n    \r\n    readInputForm = () => {\r\n        const form = document.getElementById('list-form');\r\n        if (form == null) return;\r\n        const inputs = form.getElementsByClassName(\"form-filter\");\r\n\r\n        this.fieldsFilter = {};\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            const element = inputs[i];\r\n            if (null != element.value && \"\" != element.value) {\r\n                this.fieldsFilter[element.name] = element.value;\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class Columns extends Component \r\n{\r\n    render(){\r\n        const cells = this.props.cells?this.props.cells:[];\r\n        return (\r\n            <div className=\"columns\">\r\n                {cells.map(cell=>{\r\n                    return <div className=\"column\">{cell}</div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport BaseAdminPage from './../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from './../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from './../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\n\r\nclass UsersManahement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"User\", \"user\");\r\n        this.state = {\r\n            showForm: false,\r\n        };\r\n        this.departementList = [];\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.userList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList =\r\n            (recordData == null) ||\r\n                (recordData.result_list == null) ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2>\r\n                \r\n                <Card title=\"Users\">\r\n                    {this.linkToFormCreate(\"/management/users/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(),\r\n                            navButtons\r\n                        ]} />\r\n                        <table  className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'email', withFilter: true },\r\n                                    { text: 'display_name', withFilter: true },\r\n                                    { text: 'role', withFilter: true },\r\n                                    { text: 'departement', withFilter: true },\r\n                                    { text: 'action', },\r\n                                ]} />\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.email}</td>\r\n                                    <td>{item.display_name}</td>\r\n                                    <td>{item.role}</td>\r\n                                    <td>{item.departement ? item.departement.name : '-'}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/users/\"+item.id,\r\n                                            item.id)}     \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                        </table>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UsersManahement));","import React, { Component } from 'react';\r\nimport BaseAdminPage from '../BaseAdminPage';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport Card from '../../container/Card';\r\nimport * as formComponent from '../../forms/commons';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport NavButtons from '../../buttons/NavButtons';\r\nimport BaseManagementPage from './BaseManagementPage';\r\nimport Columns from './../../container/Columns';\r\nclass DeparementManagement extends BaseManagementPage {\r\n    constructor(props) {\r\n        super(props, \"Departement\", \"departement\");\r\n        this.state = {};\r\n\r\n        this.masterDataService = MasterManagementService.instance;\r\n        \r\n        this.populateDefaultInputs = () => {\r\n            const recordData = this.recordData != null ? this.recordData : null;\r\n\r\n            if (null == recordData) {\r\n                return;\r\n            }\r\n            const fieldsFilter = recordData.filter.fieldsFilter;\r\n            for (const key in fieldsFilter) {\r\n                if (fieldsFilter.hasOwnProperty(key)) {\r\n                    const element = fieldsFilter[key];\r\n                    try {\r\n                        document.getElementById(\"input-form-\" + key).value = element;\r\n                    } catch (error) {\r\n                        //\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadRecords = () => {\r\n        this.readInputForm();\r\n        const request = {\r\n            page: this.page,\r\n            limit: this.limit,\r\n            orderBy: this.orderBy,\r\n            orderType: this.orderType,\r\n            fieldsFilter: this.fieldsFilter\r\n        };\r\n        this.commonAjax(this.masterDataService.departementList, request, this.successLoaded, this.errorLoaded);\r\n    }\r\n    createNavButton() {\r\n        const recordData = this.recordData != null ? this.recordData  : null;\r\n\r\n        if (null == recordData) {\r\n            return <></>\r\n        }\r\n        return <NavButtons onClick={this.loadRecordByPage} limit={this.limit}\r\n            totalData={recordData.count} activeIndex={this.page} />\r\n    }\r\n\r\n    render() {\r\n        const navButtons = this.createNavButton();\r\n        const recordData = this.recordData != null ? this.recordData : null;\r\n        const recordList = recordData == null ||\r\n                recordData.result_list == null ? [] :\r\n                recordData.result_list;\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departement Management</h2>\r\n                <Card title=\"Departement\">\r\n                    {this.linkToFormCreate(\"/management/departements/create\", \"Tambah Data\")}\r\n                    <form id=\"list-form\" onSubmit={(e) => { e.preventDefault(); this.filter(e.target) }}>\r\n                        <Columns cells={[\r\n                            formComponent.ButtonApplyResetFilter(), navButtons\r\n                        ]} />\r\n                        <table style={{ tableLayout: 'fixed' }} className=\"table\">\r\n                            <TableHeadWithFilter\r\n                                onButtonOrderClick={this.onButtonOrderClick}\r\n                                headers={[\r\n                                    { text: 'No' },\r\n                                    { text: 'id', withFilter: true },\r\n                                    { text: 'name', withFilter: true },\r\n                                    { text: 'description', withFilter: true },\r\n                                    { text: 'action'}\r\n                                ]} />\r\n                            {recordList.map((item, i) => {\r\n                                const indexBegin = (this.page - 1) * this.limit;\r\n                                return (<tr>\r\n                                    <td>{indexBegin + i + 1}</td>\r\n                                    <td>{item.id}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        {this.buttonsModifyAndDelete(  \r\n                                            \"/management/departements/\"+item.id,\r\n                                            item.id)}    \r\n                                    </td>\r\n                                </tr>)\r\n                            })}\r\n                        </table>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst TableHeadWithFilter = (props) => {\r\n    return formComponent.TableHeadWithFilter(props);\r\n}\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DeparementManagement));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport MasterManagementService from './../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from './../../messages/Message';\r\nimport { SubmitResetButton } from './../../forms/commons';\r\n\r\nclass UserManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            departementList: []\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save User?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.storeRecord(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.storeRecord = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n\r\n                    if (fieldName == 'departement') {\r\n                        fieldName = 'departement_id'\r\n                    }\r\n\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                user.id = this.getRecordId();\r\n            }\r\n            this.store(user);\r\n            console.debug(\"USER: \", user);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.departementListLoaded = (response) => {\r\n            this.setState({ departementList: response.result_list });\r\n            if (null != this.getRecordId()) {\r\n                this.loadRecord();\r\n            }\r\n            console.log(\"departementListLoaded: \", response);\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (user) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeUser, user,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.loadDepartements = () => {\r\n            this.commonAjax(\r\n                this.masterDataService.departementList, {},\r\n                this.departementListLoaded,\r\n                (error) => { }\r\n            );\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n\r\n                if (element.name == \"departement\") {\r\n                    element.value = response.user.departement_id;\r\n                } else if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = response.user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewUser, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadDepartements();\r\n        document.title = \"User Form\";\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/users\">Users</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Users Management</h2>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <SelectField label=\"Departement\" options={this.state.departementList.map(dep => {\r\n                            return {\r\n                                value: dep.id,\r\n                                text: dep.name\r\n                            }\r\n                        })} name=\"departement\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(UserManagementForm));","import React, { Component } from 'react';\r\nimport Card from '../../container/Card';\r\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\r\nimport { InputField, SelectField } from '../../forms/commons';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MasterManagementService from '../../../services/MasterDataService';\r\nimport { connect } from 'react-redux';\r\nimport Message from '../../messages/Message';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nclass DepartementManagementForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n        };\r\n        this.masterDataService = MasterManagementService.instance;\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Save Data?\").then(function(accepted){\r\n                if (accepted) {\r\n                    app.storeDepartement(form);\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n        this.storeDepartement = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const departement = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    departement[fieldName] = element.value;\r\n                }\r\n            }\r\n            if (this.getRecordId() != null) {\r\n                departement.id = this.getRecordId();\r\n            }\r\n            this.store(departement);\r\n            console.debug(\"Departement: \", departement);\r\n        }\r\n\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n\r\n        this.recordSaved = (response) => {\r\n            this.showInfo(\"SUCCESS SAVING RECORD\");\r\n        }\r\n        this.recordFailedToSave = (e) => {\r\n            this.showError(\"FAILED SAVING RECORD\");\r\n        }\r\n\r\n        this.store = (departement) => {\r\n            this.commonAjax(\r\n                this.masterDataService.storeDepartement, departement,\r\n                this.recordSaved, this.recordFailedToSave\r\n            )\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(\"form-management\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.departement[element.name];\r\n\r\n            }\r\n        }\r\n\r\n        this.handleErrorGetRecord = (e) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.masterDataService.viewDepartement, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Departement Form\";\r\n        if (null != this.getRecordId()) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2><h3>Please Wait...</h3>\r\n            </div>\r\n        }\r\n\r\n        const formTitle = <>\r\n            <Link to=\"/management/departements\">Departements</Link>&nbsp;<i className=\"fas fa-angle-right\"></i>&nbsp;Form\r\n        </>\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Departements Management</h2>\r\n                <Card title={formTitle} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-management\" >\r\n                        <InputField label=\"Nama\" name=\"name\" required={true} />\r\n                        <InputField label=\"Deskripsi\" name=\"description\" type=\"textarea\" required={true} />\r\n                        <SubmitResetButton submitText={\r\n                            this.getRecordId() == null ? \"Create\" : \"Update\"\r\n                        } withReset={this.getRecordId() == null} />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(mapStateToProps)(DepartementManagementForm));","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { rejectedPromise, commonAjaxPostCalls } from './Promises';\r\nexport default class MeetingNoteSerivce {\r\n    static instance = MeetingNoteSerivce.instance || new MeetingNoteSerivce();\r\n\r\n    store = (meetingNote) => {\r\n\r\n        const request = {\r\n            meeting_note: meetingNote\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    view = (id) => {\r\n\r\n        const request = {\r\n            code: 'meeting_note'\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/notes/view/\"+id);\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    storeAction = (action) => {\r\n\r\n        const request = {\r\n            action: action\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/action/store\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\n\r\nconst FORM_ID = \"form-input-meeting-note\";\r\nclass MeetingNoteForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true\r\n        }\r\n        this.meetingNote = {};\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            \r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function(accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });            \r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            this.meetingNote = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    this.meetingNote[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            if (this.getRecordId() != null) {\r\n                this.meetingNote.id = this.getRecordId();\r\n            }\r\n\r\n            console.debug(\"meetingNote>>\", this.meetingNote);\r\n            this.storeMeetingNote();\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            this.setState({ isLoadingRecord: false });\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.value = response.meeting_note[element.name];\r\n\r\n                if (this.isClosed() == false && \r\n                    element.name != \"content\" && element.name != \"decision\") {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n\r\n                if (this.isClosed()) {\r\n                    element.setAttribute(\"disabled\", \"disabled\");\r\n                }\r\n            }\r\n\r\n        }\r\n        this.enableInputs = () => {\r\n            const form = document.getElementById(FORM_ID);\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                element.removeAttribute(\"disabled\");\r\n\r\n            }\r\n            form.reset();\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeMeetingNote = () => {\r\n            this.commonAjax(this.meetingNoteService.store, this.meetingNote,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = ()=> {\r\n            return this.getRecordId() != null && this.meetingNote != null && this.meetingNote.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Meeting Note Form\";\r\n        if (this.getRecordId() != null) {\r\n            this.loadRecord();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.getRecordId() == null) {\r\n            this.enableInputs();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.getRecordId() != null && this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Notulensi Rapat Departemen {this.props.loggedUser.departement.name}</h2>\r\n                <Card title=\"Formulir Notulensi\">\r\n                    {this.getRecordId() != null && this.meetingNote != null? \r\n                        <div className=\"tags has-addons are-medium\">\r\n                            <span className=\"tag is-dark\">Status</span>\r\n                            <span className=\"tag is-info\">{this.meetingNote.is_closed == true ? \"Closed\" : \"Not Closed\"}</span>\r\n                        </div>\r\n                    \r\n                    :\r\n                    null}\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                        <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Tempat\" name=\"place\" />\r\n                        <InputField required={true} label=\"Pembahasan\" name=\"content\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Keputusan\" name=\"decision\" type=\"textarea\" />\r\n                        <InputField required={true} label=\"Deadline\" name=\"deadline_date\" type=\"date\" />\r\n                        <InputField required={true} label=\"Penganggung Jawab\" name=\"person_in_charge\" />\r\n                        {this.isClosed()? null :\r\n                            <SubmitResetButton submitText={\r\n                                this.getRecordId() == null ? \"Create\" : \"Update\"} withReset={this.getRecordId() == null} />\r\n                        }\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteForm));","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\nexport const dateStringDayMonthYear = (day, month, year) => {\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n/**\r\n * format = yyyy-mm-dd\r\n * @param {String} text \r\n */\r\nexport const dateStringDayMonthYearFromText = (text) => {\r\n    const raw = text.split(\"-\");\r\n    const day = raw[2];\r\n    const month = raw[1];\r\n    const year = raw[0];\r\n    return day+\" \"+MONTHS[month-1]+\" \"+year;\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport MeetingNoteSerivce from '../../../services/MeetingNoteSerivce';\r\nimport Message from '../../messages/Message';\r\nimport * as formComponent from '../../forms/commons';\r\nimport Card from '../../container/Card';\r\nimport { SubmitResetButton } from '../../forms/commons';\r\nimport { LabelField } from './../../forms/commons';\r\nimport { dateStringDayMonthYearFromText } from './../../../utils/DateUtil';\r\n\r\nconst FORM_ID = \"form-input-meeting-note-action\";\r\nclass MeetingNoteActionForm extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            recordNotFound: false,\r\n            isLoadingRecord: true,\r\n            showDetailNote: true,\r\n        }\r\n        this.meetingNote = {};\r\n        this.meetingNoteService = MeetingNoteSerivce.instance;\r\n        this.getRecordId = () => {\r\n            return this.props.match.params.id;\r\n        }\r\n        this.hideDetailNote = () => {\r\n            this.setState({showDetailNote:false});\r\n        }\r\n        this.showDetailNote = () => {\r\n            this.setState({showDetailNote:true});\r\n        }\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Submit Data?\").then(function (accepted) {\r\n                if (accepted) {\r\n                    app.fillDataAndStore(form);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.fillDataAndStore = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n\r\n            const action = {\r\n                note_id : this.meetingNote.id\r\n            };\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    action[element.name] = element.value;\r\n                }\r\n            }\r\n\r\n            console.debug(\"meetingNote action>>\", action);\r\n            this.storeAction(action);\r\n\r\n        }\r\n\r\n        this.handleSuccessSubmit = (response) => {\r\n            this.meetingNote.action = response.action;\r\n            this.meetingNote.is_closed = true;\r\n            this.showInfo(\"SUCCESS\");\r\n            try {\r\n                if (this.getRecordId() == null) {\r\n                    document.getElementById(FORM_ID).reset();\r\n                }\r\n            } catch (error) { }\r\n        }\r\n        this.handleErrorSubmit = (error) => {\r\n            this.showError(\"handleErrorSubmit: \" + error);\r\n        }\r\n        this.handleErrorGetRecord = (error) => {\r\n            this.setState({ recordNotFound: true })\r\n        }\r\n\r\n        this.handleSuccessGetRecord = (response) => {\r\n            this.meetingNote = response.meeting_note;\r\n            this.setState({ isLoadingRecord: false, recordNotFound: false });\r\n        }\r\n\r\n        // ajax calls\r\n\r\n        this.storeAction = (action) => {\r\n            this.commonAjax(this.meetingNoteService.storeAction, action,\r\n                this.handleSuccessSubmit, this.handleErrorSubmit);\r\n        }\r\n        this.loadRecord = () => {\r\n            this.commonAjax(this.meetingNoteService.view, this.getRecordId(),\r\n                this.handleSuccessGetRecord, this.handleErrorGetRecord);\r\n        }\r\n        this.isClosed = () => {\r\n            return this.getRecordId() != null && this.meetingNote != null && this.meetingNote.is_closed == true;\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Action Form\";\r\n        if (this.getRecordId() == null) {\r\n            this.backToLogin();\r\n        }\r\n        this.loadRecord();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.recordNotFound) {\r\n            return <Message className=\"is-danger\" body=\"Record Not Found\" />\r\n        }\r\n\r\n        if (this.state.isLoadingRecord) {\r\n            return <h3>Please Wait...</h3>\r\n        }\r\n\r\n        const loggedUser = this.props.loggedUser;\r\n        if (null == loggedUser) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Konfirmasi Rapat Departemen {this.props.loggedUser.departement.name}</h2>\r\n                <Card title=\"Detail Notulen\">\r\n                    <div className=\"tags has-addons are-medium\">\r\n                        <span className=\"tag is-dark\">Status</span>\r\n                        <span className=\"tag is-info\">{this.meetingNote.is_closed ? \"Closed\" : \"Not Closed\"}</span>\r\n                    </div>\r\n                    {this.state.showDetailNote? \r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Notulen</p>\r\n                            <button onClick={this.hideDetailNote} className=\"delete\" aria-label=\"delete\"></button>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Waktu dan Tempat\">\r\n                                <p>{this.meetingNote.place}, {dateStringDayMonthYearFromText(this.meetingNote.date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Pembahasan\">\r\n                                <p>{this.meetingNote.content}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keputusan\">\r\n                                <p>{this.meetingNote.decision}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Deadline\">\r\n                                <p>{dateStringDayMonthYearFromText(this.meetingNote.deadline_date)}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Penganggung Jawab\">\r\n                                <p>{this.meetingNote.person_in_charge}</p>\r\n                            </LabelField>\r\n\r\n                        </div>\r\n                    </article>\r\n                    :\r\n                    <a className=\"button\" onClick={this.showDetailNote}>Tampilkan Detail Notulen</a>\r\n                    }\r\n                </Card>\r\n                <Card title=\"Formulir Konfirmasi\">\r\n                    {this.meetingNote.action == null ?\r\n                    <form id={FORM_ID} onSubmit={this.onSubmit}>\r\n                            <InputField required={true} label=\"Tanggal\" name=\"date\" type=\"date\" />\r\n                            <InputField required={true} label=\"Keterangan\" name=\"description\" type=\"textarea\" />\r\n                            <SubmitResetButton submitText={\"Submit\"} withReset={true} />\r\n                    </form>\r\n                    :\r\n                    <article style={{ marginBottom: '10px' }} className=\"is-info\">\r\n                        <div className=\"message-header\">\r\n                            <p>Detail Konfirmasi</p>\r\n                        </div>\r\n                        <div className=\"message-body has-background-light\">\r\n                            <LabelField label=\"Tanggal\">\r\n                                <p>{this.meetingNote.action.date}</p>\r\n                            </LabelField>\r\n                            <LabelField label=\"Keterangan\">\r\n                                <p>{this.meetingNote.action.description}</p>\r\n                            </LabelField>\r\n                        </div>\r\n                    </article>\r\n                    }\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst InputField = (props) => {\r\n\r\n    return formComponent.InputField(props);\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    //   getMeetingNotes: (request, app) => dispatch(actions.meetingNotesAction.list(request, app)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MeetingNoteActionForm));","\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class UserService{\r\n    static instance = UserService.instance || new UserService();\r\n    \r\n    constructor(props){\r\n    }\r\n\r\n    updateProfile = (user) => {\r\n        const request = {\r\n            'userModel':user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/accountdashboard/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport BaseComponent from './../BaseComponent';\r\nimport { connect } from 'react-redux';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Card from './../container/Card';\r\nimport * as actions from '../../redux/actionCreators'\r\nimport { InputField, LabelField, SubmitResetButton } from './../forms/commons';\r\nimport UserService from './../../services/UserService';\r\nclass Profile extends BaseComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.userService = UserService.instance;\r\n\r\n        this.populateForm = () => {\r\n            const form = document.getElementById(\"form-profile\");\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = this.props.loggedUser;\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if(element.name == \"password\"){\r\n                    element.value = null;\r\n                } else {\r\n                    element.value = user[element.name];\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onSubmit = (e) => {\r\n            e.preventDefault();\r\n            const form = e.target;\r\n            const app = this;\r\n            this.showConfirmation(\"Update Profile?\")\r\n            .then(function(accepted){\r\n                if (accepted) {\r\n                    app.updateProfile(form);\r\n                }\r\n            })\r\n        }\r\n\r\n        this.updateProfile = (form) => {\r\n            const inputs = form.getElementsByClassName(\"input-form-field\");\r\n            const user = {};\r\n            for (let i = 0; i < inputs.length; i++) {\r\n                const element = inputs[i];\r\n                if (null != element.value && \"\" != element.value) {\r\n                    let fieldName = element.name;\r\n                    user[fieldName] = element.value;\r\n                }\r\n            }\r\n\r\n            this.commonAjax(\r\n                this.userService.updateProfile, user,\r\n                this.onSubmitSuccess, this.onSubmitError\r\n            );\r\n        }\r\n        this.onSubmitSuccess = (response) => {\r\n            this.showInfo(\"Update Profile Success\");\r\n\r\n            this.props.requestAppId(this.getParentApp());\r\n        }\r\n        this.onSubmitError = (e) => {\r\n            this.showError(\"Update Profile Failed\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        \r\n        document.title = \"Profile\";\r\n        this.populateForm();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedUser;\r\n        if (null == user) {\r\n            return <></>\r\n        }\r\n        return (\r\n            <div>\r\n                <h2 style={{ textAlign: 'center' }}>Profile</h2>\r\n                <Card title={\"Update Profile\"} >\r\n                    <form onSubmit={this.onSubmit} id=\"form-profile\" >\r\n                        <InputField label=\"Email\" name=\"email\" required={true} type=\"email\" />\r\n                        <InputField label=\"Username\" name=\"name\" required={true} />\r\n                        <InputField label=\"Display Name\" name=\"display_name\" required={true} />\r\n                        {/* <InputField label=\"Role\" name=\"role\" required={true} /> */}\r\n                        <InputField label=\"Password\" name=\"password\" note=\"Kosongkan password apabila tidak ingin diubah\" />\r\n                        <LabelField label=\"Departement\">\r\n                            {user.departement? user.departement.name : \"\"}\r\n                        </LabelField>\r\n                        <SubmitResetButton submitText={\r\n                            \"Update\"\r\n                        } />\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\r\n  })\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Profile));","\r\nimport React, { Component } from 'react';\r\n\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\r\nimport Login from '../pages/Login';\r\nimport Dashboard from '../pages/Dashboard';\r\nimport ManagementMenu from './../pages/management/ManagementMenu';\r\nimport UsersManagement from '../pages/management/UsersManagement';\r\nimport DepartementManagement from '../pages/management/DepartementManagement';\r\nimport UsersManagementForm from '../pages/management/UsersManagementForm';\r\nimport DepartementManagementForm from '../pages/management/DepartementManagementForm';\r\nimport MeetingNoteForm from '../pages/meetingnotes/MeetingNoteForm';\r\nimport MeetingNoteActionForm from '../pages/meetingnotes/MeetingNoteActionForm';\r\nimport Profile from '../pages/Profile';\r\n\r\nclass Content extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        <div style={{ height: '20px' }}></div>\r\n        <Switch>\r\n          <Route exact={true} path=\"/\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/home\" render={\r\n            (props) =>\r\n              <Home />\r\n          } />\r\n          <Route path=\"/dashboard\" render={\r\n            (props) =>\r\n              <Dashboard app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/create\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id\" render={\r\n            (props) =>\r\n              <MeetingNoteForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/meetingnote/:id/action\" render={\r\n            (props) =>\r\n              <MeetingNoteActionForm app={this.props.app} />\r\n          } />\r\n\r\n          {/* ========= management ========== */}\r\n          <Route exact path=\"/management\" render={\r\n            (props) =>\r\n              <ManagementMenu app={this.props.app} />\r\n          } />\r\n\r\n          {/* users */}\r\n          <Route exact path=\"/management/users\" render={\r\n            (props) =>\r\n              <UsersManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/create\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/users/:id\" render={\r\n            (props) =>\r\n              <UsersManagementForm app={this.props.app} />\r\n          } />\r\n          {/* departements */}\r\n          <Route exact path=\"/management/departements\" render={\r\n            (props) =>\r\n              <DepartementManagement app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/create\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route exact path=\"/management/departements/:id\" render={\r\n            (props) =>\r\n              <DepartementManagementForm app={this.props.app} />\r\n          } />\r\n          <Route path=\"/login\" render={\r\n            (props) => <Login app={this.props.app} />\r\n          } />\r\n          {/* ///////////authenticated//////////// */}\r\n          <Route exact path=\"/profile\" render={\r\n            (props) =>\r\n              <Profile app={this.props.app} />\r\n          } />\r\n        </Switch></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Home = (props) => {\r\n  document.title = \"Home\";\r\n  return <div style={{ textAlign: 'center' }}>\r\n    <h2>Kafila Console</h2>\r\n    <span style={{ fontSize: '10em' }}>\r\n      <i className=\"fas fa-users-cog\"></i>\r\n    </span>\r\n  </div>\r\n}\r\n\r\nexport default Content;","\r\nimport React, { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nexport default class Loader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      opacity: 1,\r\n      show: true\r\n    }\r\n   \r\n  }\r\n\r\n  componentDidUpdate() {\r\n   \r\n  }\r\n\r\n\r\n  render() {\r\n    if (this.props.show == false) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div style={{width:'100%', height:'50px',  color:'#ccc', textAlign:'center'}}>\r\n        <div style={{position:'fixed', zIndex:10000}}>\r\n          <div className=\"columns\" style={{width:'min-content'}}>\r\n          <div className=\"column\">\r\n            <div className=\"lds-ring\"  ><div></div><div></div><div></div><div></div></div> \r\n          </div>\r\n          <div className=\"column\"><span style={{fontSize:'2em'}}>Loading</span></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nimport React, { Component } from 'react';\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onYes = (e) => {\r\n\r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n\r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            document.getElementById(\"button-alert-yes\").focus();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        let headerClassName = 'modal-card-head has-background-link';\r\n        if (isError) {\r\n            headerClassName = 'modal-card-head has-background-danger';\r\n        }\r\n        return (\r\n            <>\r\n                <Backdrop>\r\n                    <form onSubmit=\"return false;\">\r\n                    <div className='modal-card'>\r\n                        <header className={headerClassName}>\r\n                            <p className='modal-card-title has-text-white'>{title}</p>\r\n                        </header>\r\n                        <section  className= 'modal-card-body'>\r\n                            {this.props.children}\r\n                        </section>\r\n                        <footer className='modal-card-foot'>\r\n                            <div style={{margin:'auto'}}>\r\n                                <button id=\"button-alert-yes\" type=\"submit\" \r\n                                onClick={this.onYes} className={this.props.yesOnly?\"button\":\"button is-link\"}>\r\n                                    Yes\r\n                                </button>\r\n                                {this.props.yesOnly?null:<button onClick={this.onNo} className=\"button\">No</button>}\r\n                            </div>\r\n                        </footer>\r\n                    </div>\r\n                    </form>\r\n\r\n                </Backdrop>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal is-active has-text-centered\" style={{ backgroundColor: 'rgba(100,100,100,0.7)' }} >\r\n            <div className=\"modal-background\"></div>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport Footer from './components/layout/Footer';\nimport Header from './components/layout/Header';\nimport Content from './components/layout/Content';\nimport Loader from './components/widget/Loader';\nimport Alert from './components/messages/Alert';\nconst blankFunc = function (e) { };\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      menus: [],\n      menuCode: '',\n      loading: false,\n      loadingPercentage: 0,\n      requestId: null,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n\n    };\n\n    this.alertTitle = null;\n    this.alertBody = null;\n    this.alertIsYesOnly = true;\n    this.alertIsError = false;\n    this.alertOnYesCallback = null;\n    this.alertOnCancelCallback = null;\n\n    this.loadings = 0;\n\n\n\n    this.setMenuCode = (code) => {\n      this.setState({ menuCode: code });\n    }\n\n    this.refresh = () => {\n      this.setState({ mainAppUpdated: new Date() });\n    }\n\n    this.incrementLoadings = function () {\n      this.loadings++;\n    }\n\n    this.decrementLoadings = function () {\n      this.loadings--;\n      if (this.loadings < 0) {\n        this.loadings = 0;\n      }\n    }\n\n    this.requestAppId = () => {\n      this.props.requestAppId(this);\n    }\n    this.startLoading = (realtime) => {\n      this.incrementLoadings();\n      this.setState({ loading: true, realtime: realtime });\n    }\n\n    this.endLoading = () => {\n      console.log(\"END LOADING\");\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    }\n\n    this.showAlertError = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertIsError = true;\n      this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n    }\n    this.showAlert = (title, body, yesOnly, yesCallback, noCallback) => {\n      this.alertTitle = title;\n      this.alertBody = body;\n      this.alertIsYesOnly = yesOnly;\n      const app = this;\n      this.alertOnYesCallback = function (e) {\n        app.dismissAlert();\n        yesCallback(e);\n      }\n      if (!yesOnly) {\n        this.alertOnCancelCallback = function (e) {\n          app.dismissAlert();\n          if (noCallback != null) {\n            noCallback(e);\n          }\n        };\n      }\n      this.setState({ showAlert: true })\n    }\n    this.dismissAlert = () => {\n      this.alertIsError = false;\n      this.setState({ showAlert: false })\n    }\n\n    this.routedContent = () => {\n      return (<>\n        <Switch>\n          <Route path=\"/home\" render={\n            (props) =>\n              <h2>HOME</h2>\n          } />\n\n          <Route path=\"/login\" render={\n            (props) => <h2>Login</h2>\n          } />\n          {/* ///////////authenticated//////////// */}\n\n        </Switch>\n\n      </>);\n    }\n\n\n  }\n\n  componentDidUpdate() {\n    if (this.props.requestId != this.state.requestId) {\n      this.setState({ requestId: this.props.requestId });\n      this.props.refreshLogin();\n\n    }\n  }\n\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  setMenus() {\n    const additionalMenus = this.props.menus ? this.props.menus : [];\n    const menus = new Array();\n    for (let i = 0; i < additionalMenus.length; i++) {\n\n      const menu = additionalMenus[i];\n      const isNotAuthenticated = this.props.loginStatus != true && menu.authenticated == true;\n      const isShoppingDisabled = !this.state.enableShopping && menu.code == 'cart';\n\n      if (isNotAuthenticated) { continue; }\n      if (isShoppingDisabled) { continue; }\n\n      menus.push(menu);\n    }\n\n    return menus;\n\n  }\n\n  render() {\n\n    if (!this.props.requestId) {\n      return (<Loader show={true} />)\n    }\n    return (\n      <div className=\"App\">\n        {this.state.showAlert ?\n          <Alert \n            isError={this.alertIsError}\n            yesOnly={this.alertIsYesOnly}\n            title={this.alertTitle}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <Header app={this} />\n        <section className=\"container\" style={{minHeight:'70vh'}}>\n          <div style={{height:'50px'}}>\n            <Loader show={this.state.loading} />\n          </div>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <Content app={this} />\n            </div>\n          </div>\n        </section>\n        <Footer />\n\n      </div>\n    )\n  }\n\n}\n\n\n\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n\n    //user\n    loginStatus: state.userState.loginStatus,\n    menus: state.userState.menus,\n    requestId: state.userState.requestId,\n    applicationProfile: state.userState.applicationProfile,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  performLogout: (app) => dispatch(actions.accountAction.performLogout(app)),\n  requestAppId: (app) => dispatch(actions.accountAction.requestAppId(app)),\n  refreshLogin: () => dispatch(actions.refreshLoginStatus()),\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types' \r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\nimport { setApiToken } from './../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false, \r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    lastLoginAttempt:new Date(),\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    /*\r\n        ========setting menu========\r\n    */\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n            result = { ...state, \r\n                requestId: action.payload.requestId, \r\n                applicationProfile: action.payload.applicationProfile };\r\n            \r\n            if (action.payload.loginStatus != true) {\r\n\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            } else {\r\n\r\n                if (action.payload.user) {\r\n\r\n                    result.loggedUser = action.payload.user;\r\n                    result.loginStatus = true;\r\n                    setApiToken(result.loggedUser.api_token);\r\n                }else {\r\n                    result.loginStatus = false;\r\n                    result.loggedUser = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            if (!action.payload.loginStatus) {\r\n                return { ...state, lastLoginAttempt:new Date(), loginFailed: true }\r\n            }\r\n            let result = {\r\n                ...state,\r\n                lastLoginAttempt:new Date(),\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: false, \r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n            setApiToken(result.loginKey);\r\n            \r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false, \r\n                loggedUser: null\r\n            };\r\n            return result;\r\n        default:\r\n           return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nexport const initState = {\r\n\r\n    entitiesData: {\r\n        entityConfig: null,\r\n    },\r\n    managedEntity: null,\r\n    entityProperty: null,\r\n    managementMenus: [],\r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ENTITY:\r\n\r\n            return { ...state, entitiesData: action.payload };\r\n        case types.GET_ENTITY_BY_ID:\r\n\r\n            return { ...state, managedEntity: action.payload.entities[0] };\r\n        case types.UPDATE_ENTITY:\r\n\r\n            return state;\r\n        case types.REMOVE_MANAGED_ENTITY:\r\n\r\n            return { ...state, managedEntity: null };\r\n        case types.GET_ENTITY_PROPERTY:\r\n\r\n            return { ...state, entityProperty: action.payload };\r\n        case types.GET_MANAGEMENT_MENUS:\r\n\r\n            return { ...state, managementMenus: action.payload.generalList };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    meetingNoteData: null,\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    switch (action.type) { \r\n        case types.GET_MEETING_NOTES:\r\n            let result = {\r\n                ...state,\r\n                meetingNoteData: action.payload\r\n            };\r\n            console.debug(\"action.meetingNoteData: \", result.meetingNoteData);\r\n            return result;\r\n        \r\n        default:\r\n            return { ...state };\r\n             \r\n    }\r\n}\r\n\r\nexport default reducer;","\r\nimport * as userReducer from \"./userReducer\" \r\nimport * as managementReducer from \"./managementReducer\"\r\nimport * as meetingNotesReducer from \"./meetingNotesReducer\"\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    { \r\n        userState: userReducer.reducer, \r\n        managementState: managementReducer.reducer,\r\n        meetingNoteState: meetingNotesReducer.reducer\r\n    }\r\n);\r\n\r\nexport const initialState = { \r\n    userState: userReducer.initState, \r\n    managementState: managementReducer.initState,\r\n    meetingNoteState: meetingNotesReducer.initState\r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n\r\n            let loginKey = responseJson.user.api_token;\r\n            let loginSuccess = true;\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: loginSuccess,\r\n                    loginKey: loginKey,\r\n                    loggedUser: responseJson.user\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => {\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: false }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader(); \r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: headers\r\n    }).then(response => { return Promise.all([response.json(), response]); })\r\n    .then(([responseJson, response]) => {\r\n\r\n            console.debug(\"Request App Id Middleware Response:\", responseJson);\r\n            let loginKey = \"\";\r\n            let requestId = responseJson.message;\r\n            let loginStatus = false;\r\n            if (responseJson.user) {\r\n                loginKey = responseJson.user.api_token;\r\n                loginStatus = true;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: {loginStatus: loginStatus, loginKey:loginKey, requestId:requestId, ...responseJson }});\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.error(\"ERROR Get Request ID: \", err); })\r\n        .finally(param => action.meta.app.endLoading());\r\n}\r\n\r\n\r\nexport const refreshLoginStatusMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REFRESH_LOGIN) {\r\n        return next(action);\r\n    } \r\n\r\n}\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json(), response]); })\r\n        .then(([responseJson, response]) => {\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            }else{\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => app.endLoading());\r\n\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n\r\nexport const getMeetingNotesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MEETING_NOTES) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    ...response\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => { console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}\r\n\r\nexport const storeMeetingNote = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MEETING_NOTES) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload), headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => { return Promise.all([response.json()]); })\r\n        .then(response => {\r\n            alert(\"Success storeMeetingNote\");\r\n        })\r\n        .catch(err => { alert(\"Error storeMeetingNote\");console.log(err) })\r\n        .finally(param => {\r\n            app.endLoading();  \r\n        });\r\n\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware'\r\nimport * as managementMiddleware from '../middlewares/ManagementMiddleware'\r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware'\r\nimport * as meetingNoteMiddleware from '../middlewares/MeetingNoteMiddleware'\r\nimport * as common from '../middlewares/Common';\r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware,\r\n            userMiddleware.refreshLoginStatusMiddleware,\r\n            userMiddleware.requestAppIdMiddleware,\r\n            //meeting notes\r\n            meetingNoteMiddleware.getMeetingNotesMiddleware, \r\n\r\n            /*enntity management*/\r\n            // managementMiddleware.getEntityListMiddleware,\r\n            // managementMiddleware.getEntityByIdMiddleware,\r\n            // managementMiddleware.updateEntityMiddleware,\r\n            // managementMiddleware.removeManagedEntityMiddleware, \r\n            // managementMiddleware.getEntitiesWithCallbackMiddleware,\r\n            // managementMiddleware.getEntityPropertyMiddleware,\r\n            // managementMiddleware.getManagementMenusMiddleware,\r\n\r\n            /*realtime chat*/\r\n            // realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            // realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}  \r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './redux/configureStore'\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst Root = (props) => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}